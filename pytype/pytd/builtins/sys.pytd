class _flags:  # TODO(pludemann): allow calling this `flags`
  debug = ...  # type: int
  py3k_warning = ...  # type: int
  division_warning = ...  # type: int
  division_new = ...  # type: int
  inspect = ...  # type: int
  interactive = ...  # type: int
  optimize = ...  # type: int
  dont_write_bytecode = ...  # type: int
  no_user_site = ...  # type: int
  no_site = ...  # type: int
  ignore_environment = ...  # type: int
  tabcheck = ...  # type: int
  verbose = ...  # type: int
  unicode = ...  # type: int
  bytes_warning = ...  # type: int
  hash_randomization = ...  # type: int


__displayhook__ = ...  # type: object
__excepthook__ = ...  # type: object
__stderr__ = ...  # type: file
__stdin__ = ...  # type: file
__stdout__ = ...  # type: file
_mercurial = ...  # type: tuple
api_version = ...  # type: int
argv = ...  # type: list[str]
builtin_module_names = ...  # type: list[str]
byteorder = ...  # type: str
copyright = ...  # type: str
dont_write_bytecode = ...  # type: bool
exec_prefix = ...  # type: str
executable = ...  # type: str
flags = ...  # type: _flags
float_info = ...  # type: object
float_repr_style = ...  # type: str
hexversion = ...  # type: int
long_info = ...  # type: object
maxint = ...  # type: int
maxsize = ...  # type: int
maxunicode = ...  # type: int
modules = ... # type: dict[str, module]
path = ...  # type: list[str]
platform = ...  # type: str
prefix = ...  # type: str
py3kwarning = ...  # type: bool
stderr = ...  # type: file
stdin = ...  # type: file
stdout = ...  # type: file
subversion = ...  # type: tuple
version = ...  # type: str
version_info = ...  # type: tuple[int]
warnoptions = ...  # type: object

def _clear_type_cache() -> NoneType
def _current_frames() -> ?  # TODO(pludemann): fix return type
def _getframe(...) -> ? raises ValueError  # TODO(pludemann): fix return type
def call_tracing(a, b) -> ?  # TODO(pludemann): fix return type
def displayhook(...) -> NoneType raises RuntimeError
def exc_clear() -> NoneType raises DeprecationWarning
def exc_info() -> tuple[?]
def excepthook(...) -> NoneType
def exit(...) -> NoneType raises SystemExit
def getcheckinterval() -> int
def getdefaultencoding() -> str
def getdlopenflags() -> int
def getfilesystemencoding() -> str or NoneType
def getprofile() -> NoneType
def getrecursionlimit() -> int
def getrefcount(...) -> int
def getsizeof(object, ...) -> int raises TypeError
def gettrace() -> NoneType
def setcheckinterval(a: int) -> NoneType
def setdefaultencoding(a: str) -> NoneType
def setdlopenflags(a: int) -> NoneType
def setprofile(...) -> NoneType
def setrecursionlimit(a: int) -> NoneType raises ValueError
def settrace(...) -> NoneType
