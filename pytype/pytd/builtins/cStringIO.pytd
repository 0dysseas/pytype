# TODO(pludemann): review this -- it was generated by c2py

class cStringIO_CAPI:
  pass

class OutputType(StringO):
  def flush() -> NoneType
  def getvalue(...) -> str
  def isatty() -> bool
  def read(...) -> str
  def readline(...) -> str
  def readlines(...) -> list[str]
  def reset() -> NoneType
  def seek(a: int, ...) -> NoneType
  def tell() -> int
  def truncate(...) -> NoneType raises IOError
  def close() -> NoneType
  def write(a: str or bytes or bytearray or buffer) -> NoneType
  def writelines(...) -> NoneType

def StringIO(...) -> StringI or StringO

class StringO:
  def flush() -> NoneType
  def getvalue(...) -> str
  def isatty() -> bool
  def read(...) -> str
  def readline(...) -> str
  def readlines(...) -> list[str]
  def reset() -> NoneType
  def seek(a: int, ...) -> NoneType
  def tell() -> int
  def truncate(...) -> NoneType raises IOError
  def close() -> NoneType
  def write(a: str or bytes or bytearray or buffer) -> NoneType
  def writelines(...) -> NoneType

class StringI:
  def flush() -> NoneType
  def getvalue(...) -> str
  def isatty() -> bool
  def read(...) -> str
  def readline(...) -> str
  def readlines(...) -> list[str]
  def reset() -> NoneType
  def seek(a: int, ...) -> NoneType
  def tell() -> int
  def truncate(...) -> NoneType raises IOError
  def close() -> NoneType

class InputType(StringI):
  def flush() -> NoneType
  def getvalue(...) -> str
  def isatty() -> bool
  def read(...) -> str
  def readline(...) -> str
  def readlines(...) -> list[str]
  def reset() -> NoneType
  def seek(a: int, ...) -> NoneType
  def tell() -> int
  def truncate(...) -> NoneType raises IOError
  def close() -> NoneType
