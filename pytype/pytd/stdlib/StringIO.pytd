EINVAL = ...  # type: int
__all__ = ...  # type: list[str]
__builtins__= ...  # type: dict[str, object]
__doc__ = ...  # type: str
__file__ = ...  # type: str
__name__ = ...  # type: str
__package__ = ...  # type: NoneType

def _complain_ifclosed(closed) -> NoneType
def test() -> NoneType

class StringIO():
    __doc__ = ...  # type: str
    buf = ...  # type: ?
    buflist = ...  # type: list[?]
    closed = ...  # type: bool
    len = ...  # type: ?
    pos = ...  # type: ?
    softspace = ...  # type: int
    def __init__(self, ...) -> NoneType
    def __iter__(self) -> StringIO
    def close(self) -> NoneType
    def flush(self) -> NoneType
    def getvalue(self) -> str
    def isatty(self) -> bool
    def next(self) -> ?
    def read(self, ...) -> str
    def readline(self, ...) -> str
    def readlines(self, ...) -> list[str]
    def seek(self, pos: int or list[?], ...) -> NoneType
    def tell(self) -> int
    def truncate(self, ...) -> NoneType
    def write(self, s) -> NoneType
    def writelines(self, iterable) -> NoneType
