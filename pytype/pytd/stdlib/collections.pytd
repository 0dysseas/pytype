# TODO(pludemann): review this -- it was generated by:
#         pytype --api python_runtime/v2_7/Lib/atexit.py


__all__: list<?>
_abcoll: ?
_chain: type
_class_template: str
_eq: ?
_field_template: str
_get_ident: ?
_heapq: ?
_imap: type
_iskeyword: ?
_itemgetter: function
_repeat: type
_repr_template: str
_starmap: type
_sys: module
deque: ?
dumps: function
loads: function

def namedtuple(typename: str, field_names: str or list<str>, ...) -> type  # TODO(pludemann): add verbose, rename

class OrderedDict:
  pass

class defaultdict:
  pass

class Counter(dict<?, ?>):
    __doc__: str
    fromkeys: classmethod
    def __add__(self, other: dict<object, object>) -> Counter or NotImplementedType
    def __and__(self, other: bytearray or xrange or dict<?, object> or list<object> or tuple<object>) -> Counter or NotImplementedType
    def __delitem__(self, elem) -> NoneType
    def __init__(self, ...) -> NoneType
    def __missing__(self, key) -> int
    def __or__(self, other: dict<object, object>) -> Counter or NotImplementedType
    def __reduce__(self) -> tuple<?>
    def __repr__(self) -> str
    def __sub__(self, other: dict<object, object>) -> Counter or NotImplementedType
    def copy(self) -> ?
    def elements(self) -> ?
    def most_common(self, ...) -> ?
    def subtract(self, ...) -> NoneType
    def update(self, ...) -> NoneType
