# TODO(pludemann): review this -- it was generated by:
#      for d in dir(ctypes): print d, type(getattr(ctypes, d))
# Need to also do _ctypes

ARRAY: function
ArgumentError: type
# Array: _ctypes.PyCArrayType
# BigEndianStructure _endian._swapped_meta
CDLL: type
CFUNCTYPE: function
DEFAULT_MODE: int
class LibraryLoader: 
  pass
# LittleEndianStructure: _ctypes.PyCStructType
POINTER: function
PYFUNCTYPE: function
class PyDLL:
  pass
RTLD_GLOBAL: int
RTLD_LOCAL: int
SetPointerType: function
# Structure: _ctypes.PyCStructType
# Union: _ctypes.UnionType
# _CFuncPtr: _ctypes.PyCFuncPtrType
_FUNCFLAG_CDECL: int
_FUNCFLAG_PYTHONAPI: int
_FUNCFLAG_USE_ERRNO: int
_FUNCFLAG_USE_LASTERROR: int
# _Pointer: _ctypes.PyCPointerType
# _SimpleCData: _ctypes.PyCSimpleType
__builtins__: dict
__doc__: str
__file__: str
__name__: str
__package__: str
__path__: list
__version__: str
_c_functype_cache: dict
_calcsize: function
_cast: function
_cast_addr: int
_check_size: function
_ctypes_version: str
_dlopen: function
_endian: module
_memmove_addr: int
_memset_addr: int
_os: module
_pointer_type_cache: dict
_reset_cache: function
_string_at: function
_string_at_addr: int
_sys: module
_wstring_at: function
_wstring_at_addr: int
addressof: function
alignment: function
byref: function
# c_bool: _ctypes.PyCSimpleType
c_buffer: function
# c_byte: _ctypes.PyCSimpleType
# c_char: _ctypes.PyCSimpleType
# c_char_p: _ctypes.PyCSimpleType
# c_double: _ctypes.PyCSimpleType
# c_float: _ctypes.PyCSimpleType
# c_int: _ctypes.PyCSimpleType
# c_int16: _ctypes.PyCSimpleType
# c_int32: _ctypes.PyCSimpleType
# c_int64: _ctypes.PyCSimpleType
# c_int8: _ctypes.PyCSimpleType
# c_long: _ctypes.PyCSimpleType
# c_longdouble: _ctypes.PyCSimpleType
# c_longlong: _ctypes.PyCSimpleType
# c_short: _ctypes.PyCSimpleType
# c_size_t: _ctypes.PyCSimpleType
# c_ssize_t: _ctypes.PyCSimpleType
# c_ubyte: _ctypes.PyCSimpleType
# c_uint: _ctypes.PyCSimpleType
# c_uint16: _ctypes.PyCSimpleType
# c_uint32: _ctypes.PyCSimpleType
# c_uint64: _ctypes.PyCSimpleType
# c_uint8: _ctypes.PyCSimpleType
# c_ulong: _ctypes.PyCSimpleType
# c_ulonglong: _ctypes.PyCSimpleType
# c_ushort: _ctypes.PyCSimpleType
# c_void_p: _ctypes.PyCSimpleType
# c_voidp: _ctypes.PyCSimpleType
# c_wchar: _ctypes.PyCSimpleType
# c_wchar_p: _ctypes.PyCSimpleType
cast: function
cdll: LibraryLoader
create_string_buffer: function
create_unicode_buffer: function
get_errno: function
memmove: function
memset: function
pointer: function
# py_object: _ctypes.PyCSimpleType
pydll: LibraryLoader
pythonapi: PyDLL
resize: function
set_conversion_mode: function
set_errno: function
sizeof: function
string_at: function
wstring_at: function
