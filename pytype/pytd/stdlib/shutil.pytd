# TODO(pludemann): review this -- it was generated by:
#         pytype --api python_runtime/v2_7/Lib/shutil.py

WindowsError: NoneType
_ARCHIVE_FORMATS: dict[?, tuple[?]]
__all__: list[str]
abspath: function
collections: ?
errno: module
fnmatch: ?
getgrnam: NoneType or function
getpwnam: NoneType or function
os: module
stat: ?
sys: module

def _basename(path: str or unicode) -> ?
def _call_external_zip(base_dir, zip_filename, ...) -> NoneType
def _destinsrc(src, dst) -> bool
def _destinsrc(src: str or unicode, dst: buffer or str or unicode) -> bool
def _get_gid(name) -> ?
def _get_uid(name: str) -> NoneType
def _make_tarball(base_name: buffer or bytearray or str or unicode, base_dir, ...) -> bytearray or str or unicode
def _make_zipfile(base_name: buffer or bytearray or str or unicode, base_dir, ...) -> bytearray or str or unicode
def _samefile(src, dst) -> ?
def _samefile(src: buffer or str or unicode, dst: buffer or str or unicode) -> ?
def copy(src: buffer or str or unicode, dst: buffer or str or unicode) -> NoneType
def copy2(src: buffer or str or unicode, dst: buffer or str or unicode) -> NoneType
def copyfile(src: buffer or str or unicode, dst: buffer or str or unicode) -> NoneType
def copyfileobj(fsrc, fdst, length, ...) -> ?
def copymode(src, dst) -> NoneType
def copymode(src: buffer or str or unicode, dst: buffer or str or unicode) -> NoneType
def copystat(src, dst) -> NoneType
def copystat(src: buffer or str or unicode, dst: buffer or str or unicode) -> NoneType
def copytree(src, dst, ...) -> NoneType
def copytree(src: str or unicode, dst: buffer or str or unicode, ...) -> NoneType
def get_archive_formats() -> list[tuple[function or str or list[tuple[NoneType or str]] or tuple[function or str or list[tuple[NoneType or str]]]]]
def ignore_patterns(...) -> function
def make_archive(base_name: buffer or bytearray or str or unicode, format, ...) -> bytearray or str or unicode
def move(src: str or unicode, dst: buffer or str or unicode) -> NoneType
def register_archive_format(name, function, ...) -> NoneType
def rmtree(path, ...) -> NoneType
def unregister_archive_format(name) -> NoneType

class Error(EnvironmentError):
    pass

class ExecError(EnvironmentError):
    __doc__: str

class SpecialFileError(EnvironmentError):
    __doc__: str
