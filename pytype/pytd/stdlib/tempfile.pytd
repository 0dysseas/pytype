# TODO(pludemann): review this -- crashed: pytype --api Lib/tempfile.py

TMP_MAX = ...  # type: int
def TemporaryFile(mode: str, ...) -> ?
_Random = ...  # type: ?
_StringIO = ...  # type: type
__all__ = ...  # type: list[str]
_allocate_lock = ...  # type: function
_bin_openflags = ...  # type: int
_errno = ...  # type: module
_fcntl = ...  # type: module
_io = ...  # type: module
_name_sequence = ...  # type: NoneType
_once_lock = ...  # type: ?
_os = ...  # type: module
_set_cloexec = ...  # type: function
_text_openflags = ...  # type: int
_thread = ...  # type: ?
tempdir = ...  # type: NoneType
template = ...  # type: str

def NamedTemporaryFile(mode, bufsize, suffix, prefix, dir, delete, ...) -> ?
def _candidate_tempdir_list() -> ?
def _exists(fn) -> ?
def _get_candidate_names() -> ?
def _get_default_tempdir() -> ?
def _mkstemp_inner(dir, pre, suf, flags) -> ?
def _stat(fn) -> ?
def gettempdir() -> ?
def gettempprefix() -> ?
def mkdtemp(suffix, prefix, dir, ...) -> ?
def mkstemp(suffix, prefix, dir, text, ...) -> ?
def mktemp(suffix, prefix, dir, ...) -> ?

class SpooledTemporaryFile(nothing):
    __doc__ = ...  # type: str
    _rolled = ...  # type: bool
    closed = ...  # type: property
    mode = ...  # type: property
    name = ...  # type: property
    softspace = ...  # type: property
    def __enter__(self) -> ?
    def __exit__(self, exc, value, tb) -> ?
    def __init__(self, max_size, mode, bufsize, suffix, prefix, dir, ...) -> ?
    def __iter__(self) -> ?
    def _check(self, file) -> ?
    def close(self) -> ?
    def fileno(self) -> ?
    def flush(self) -> ?
    def isatty(self) -> ?
    def next(self) -> ?
    def read(self) -> ?
    def readline(self) -> ?
    def readlines(self) -> ?
    def rollover(self) -> ?
    def seek(self) -> ?
    def tell(self) -> ?
    def truncate(self) -> ?
    def write(self, s) -> ?
    def writelines(self, iterable) -> ?
    def xreadlines(self) -> ?

class _RandomNameSequence(nothing):
    __doc__ = ...  # type: str
    characters = ...  # type: str
    rng = ...  # type: property
    def __init__(self) -> ?
    def __iter__(self) -> ?
    def next(self) -> ?

class _TemporaryFileWrapper(nothing):
    __doc__ = ...  # type: str
    unlink = ...  # type: function
    def __del__(self) -> ?
    def __enter__(self) -> ?
    def __exit__(self, exc, value, tb) -> ?
    def __exit__(self, exc, value, tb) -> ?
    def __getattr__(self, name) -> ?
    def __init__(self, file, name, delete, ...) -> ?
    def close(self) -> ?

