# TODO(pludemann): review this -- it was generated by c2py
#         supplemented by:
#             for d in dir(datetime):  print d, type(getattr(datetime, d))

MAXYEAR: int
MINYEAR: int
__doc__: str
__file__: str
__name__: str
__package__: NoneType

max: object
resolution: object
min: object
class datetime:
  def now(...) -> object
  def utcnow() -> object
  def fromtimestamp(timestamp: float, ...) -> object
  def utcfromtimestamp(a: float) -> object
  def strptime(a: str, b: str) -> object raises ValueError
  def combine(date: object, time: object) -> object
  def date() -> object
  def time() -> object
  def timetz() -> object
  def ctime() -> str
  def timetuple() -> object
  def utctimetuple() -> object raises OverflowError
  def isoformat(...) -> str
  def utcoffset() -> object
  def tzname() -> object
  def dst() -> object
  def replace(...) -> object
  def astimezone(tz: object) -> object raises ValueError
  def __reduce__() -> tuple

class date:
  def fromtimestamp(a: float) -> object
  def fromordinal(a: int) -> object raises ValueError
  def today() -> object
  def ctime() -> str
  def strftime(format: str or bytes or buffer) -> object
  def __format__(a: object) -> unicode raises ValueError
  def timetuple() -> object
  def isocalendar() -> tuple
  def isoformat() -> str
  def isoweekday() -> int
  def toordinal() -> int
  def weekday() -> int
  def replace(...) -> object
  def __reduce__() -> tuple

class tzinfo:
  def tzname(...) -> object
  def utcoffset(...) -> object
  def dst(...) -> object
  def fromutc(...) -> object raises TypeError, ValueError
  def __reduce__() -> tuple

class timedelta:
  def total_seconds() -> int
  def __reduce__() -> tuple

class time:
  def isoformat() -> str
  def strftime(format: str or bytes or buffer) -> object
  def __format__(a: object) -> unicode raises ValueError
  def utcoffset() -> object
  def tzname() -> object
  def dst() -> object
  def replace(...) -> object
  def __reduce__() -> tuple


