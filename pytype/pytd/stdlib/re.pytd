# TODO(pludemann): review this -- it was generated by:
#         pytype --api python_runtime/v2_7/Lib/re.py
#    (needs _sre and others)

DEBUG: ?
DOTALL: ?
I: ?
IGNORECASE: ?
L: ?
LOCALE: ?
M: ?
MULTILINE: ?
S: ?
T: ?
TEMPLATE: ?
U: ?
UNICODE: ?
VERBOSE: ?
X: ?
_MAXCACHE: int
__all__: list<str>
__version__: str
_alphanum: frozenset<?>
_cache: dict<tuple<?>, ?>
_cache_repl: dict<tuple<?>, ?>
_pattern_type: type
copy_reg: ?
error: ?
sre_compile: ?
sre_parse: ?
sys: module

def _compile(...) -> ?
def _compile_repl(...) -> ?
def _expand(pattern, match, template) -> ?
def _pickle(p) -> tuple<function or tuple<?>>
def _subx(pattern, template) -> ?
def compile(pattern, ...) -> ?
def escape(pattern: str or unicode or dict<slice, bytearray or str or unicode or list<?> or tuple<?>>) -> bytearray or str or unicode
def findall(pattern: ?, string, ...) -> ?
def finditer(pattern: ?, string, ...) -> ?
def match(pattern: ?, string, ...) -> ?
def purge() -> NoneType
def search(pattern: ?, string, ...) -> ?
def split(pattern: bytearray or str or unicode, string, ...) -> list<bytearray or str or unicode>
def sub(pattern: ?, repl, string, ...) -> ?
def subn(pattern: ?, repl, string, ...) -> ?
def template(pattern, ...) -> ?

class Scanner(nothing):
    lexicon: dict<?, ?> or list<?> or tuple<?>
    scanner: ?
    def __init__(self, lexicon: dict<object, ?> or list<object> or tuple<object>, ...) -> NoneType
    def scan(self, string) -> ?
