# TODO(pludemann): review this -- it was generated by:
#         pytype --api python_runtime/v2_7/Lib/re.py
#    (needs _sre and others)

DEBUG = ...  # type: ?
DOTALL = ...  # type: ?
I = ...  # type: ?
IGNORECASE = ...  # type: ?
L = ...  # type: ?
LOCALE = ...  # type: ?
M = ...  # type: ?
MULTILINE = ...  # type: ?
S = ...  # type: ?
T = ...  # type: ?
TEMPLATE = ...  # type: ?
U = ...  # type: ?
UNICODE = ...  # type: ?
VERBOSE = ...  # type: ?
X = ...  # type: ?
_MAXCACHE = ...  # type: int
__all__ = ...  # type: list[str]
__version__ = ...  # type: str
_alphanum = ...  # type: frozenset[?]
_cache = ... # type: dict[tuple[?], ?]
_cache_repl = ... # type: dict[tuple[?], ?]
_pattern_type = ...  # type: type
copy_reg = ...  # type: ?
error = ...  # type: ?
sre_compile = ...  # type: ?
sre_parse = ...  # type: ?
sys = ...  # type: module

def _compile(...) -> ?
def _compile_repl(...) -> ?
def _expand(pattern, match, template) -> ?
def _pickle(p) -> tuple[function or tuple[?]]
def _subx(pattern, template) -> ?
def compile(pattern, ...) -> ?
def escape(pattern: str or unicode or dict[slice, bytearray or str or unicode or list[?] or tuple[?]]) -> bytearray or str or unicode
def findall(pattern: ?, string, ...) -> ?
def finditer(pattern: ?, string, ...) -> ?
def match(pattern: ?, string, ...) -> ?
def purge() -> NoneType
def search(pattern: ?, string, ...) -> ?
def split(pattern: bytearray or str or unicode, string, ...) -> list[bytearray or str or unicode]
def sub(pattern: ?, repl, string, ...) -> ?
def subn(pattern: ?, repl, string, ...) -> ?
def template(pattern, ...) -> ?

class Scanner(nothing):
    lexicon = ... # type: dict[?, ?] or list[?] or tuple[?]
    scanner = ...  # type: ?
    def __init__(self, lexicon: dict[object, ?] or list[object] or tuple[object], ...) -> NoneType
    def scan(self, string) -> ?
