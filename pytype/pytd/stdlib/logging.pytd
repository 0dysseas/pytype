# TODO(pludemann): review this -- it was generated by:
#          pytype --api python_runtime/v2_7/Lib/logging/__init__.py
#     and:
#          for d in dir(logging): print d, type(getattr(logging, d))

__all__ = ...  # type: list[str]

BASIC_FORMAT = ...  # type: str
class BufferingFormatter(object):
  pass
CRITICAL = ...  # type: int
DEBUG = ...  # type: int
ERROR = ...  # type: int
FATAL = ...  # type: int
class FileHandler(object):
  pass
class Filter(object):
  pass
class Filterer(object):
  pass
class Formatter(object):
  pass
class Handler(object):
  pass
INFO = ...  # type: int
class LogRecord(object):
  pass
class Logger(object):
  pass
class LoggerAdapter(object):
  pass
class Manager(object):
  pass
NOTSET = ...  # type: int
class NullHandler(object):
  pass
class PlaceHolder(object):
  pass
class RootLogger(object):
  pass
class StreamHandler(object):
  pass
WARN = ...  # type: int
WARNING = ...  # type: int
__author__ = ...  # type: str
__builtins__ = ...  # type: dict
__date__ = ...  # type: str
__doc__ = ...  # type: str
__file__ = ...  # type: str
__name__ = ...  # type: str
__package__ = ...  # type: str
__path__ = ...  # type: list
__status__ = ...  # type: str
__version__ = ...  # type: str
_acquireLock = ...  # type: function
_addHandlerRef = ...  # type: function
_checkLevel = ...  # type: function
_defaultFormatter = ...  # type: Formatter
_handlerList = ...  # type: list
# _handlers: instance  # TODO(pludemann): add instance class to __builtins__.pytd?
_levelNames = ...  # type: dict
# _lock: threading._RLock  # TODO(pludemann)
class _loggerClass(object):
  pass
_releaseLock = ...  # type: function
_removeHandlerRef = ...  # type: function
_showwarning = ...  # type: function
_srcfile = ...  # type: str
_startTime = ...  # type: float
_unicode = ...  # type: bool
_warnings_showwarning = ...  # type: NoneType
addLevelName = ...  # type: function
atexit = ...  # type: module
basicConfig = ...  # type: function
cStringIO = ...  # type: module
captureWarnings = ...  # type: function
codecs = ...  # type: module
critical = ...  # type: function
currentframe = ...  # type: function
debug = ...  # type: function
disable = ...  # type: function
error = ...  # type: function
exception = ...  # type: function
fatal = ...  # type: function
getLevelName = ...  # type: function
getLogger = ...  # type: function
getLoggerClass = ...  # type: function
info = ...  # type: function
log = ...  # type: function
logMultiprocessing = ...  # type: int
logProcesses = ...  # type: int
logThreads = ...  # type: int
makeLogRecord = ...  # type: function
os = ...  # type: module
raiseExceptions = ...  # type: int
# root: logging.RootLogger  # TODO(pludemann)
setLoggerClass = ...  # type: function
shutdown = ...  # type: function
sys = ...  # type: module
thread = ...  # type: module
threading = ...  # type: module
time = ...  # type: module
traceback = ...  # type: module
warn = ...  # type: function
warning = ...  # type: function
warnings = ...  # type: module
weakref = ...  # type: module

